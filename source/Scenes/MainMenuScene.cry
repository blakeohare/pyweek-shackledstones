class MainMenuScene {

	field _fc = 0;
	field next;
	field _selection = 0;
	field _frame = 0;
	field _gears = [];
	
	constructor() {
		this.next = this;
		for (i = 1; i <= 4; ++i) {
			this._gears.add(get_image('ui/gear' + str(i) + '.png'));
		}
	}
	
	function clickStartGame() {
		scene = new GameSelectScene(this);
		this.next = scene;
	}

	function clickSetup() { }
	
	function clickCredits() {
		this.next = new CreditsScene();
	}
	
	function processInput(events) {
		for (e : events) {
			if (e.down) {
				if (e.Down()) {
					play_sound("menu2");
					this._selection = (this._selection + 1) % 3;
				}
				if (e.Up()) {
					play_sound("menu2");
					this._selection = (this._selection - 1) % 3;
				}
				if (e.A() || e.B() || e.Start()) {
					if (this._selection == 0) {
						this.clickStartGame();
					} else if (this._selection == 1) {
						this.clickSetup();
					} else if (this._selection == 2) {
						this.clickCredits();
					}
				}
				if (e.X()) {
					scene = new GameOverScene();
					this.next = scene;
					scene.next = scene;
				}
				if (e.Y()) {
					scene = new CreditsScene();
					this.next = scene;
					scene.next = scene;
				}
			}
		}
	}

	function update(counter) {
		play_music('title');
	}
	
	function render(screen, renderOffset) {
		this._fc += 1;
		
		frame = this._frame;
		if (this._fc % 2 == 0) {
			this._frame += 1;
			this._frame %= len(this._gears);
		}
		
		title = render_text_size(45, GAME_NAME, Colors.WHITE, 'fancy');
		start = render_text_size(20, "Start", Colors.WHITE, 'fancy');
		setup = render_text_size(20, "Setup", Colors.WHITE, 'fancy');
		credits = render_text_size(20, "Credits", Colors.WHITE, 'fancy');
		art = get_image('misc/mainmenu-bg.png');
		
		titleOffset = [(SCREEN_WIDTH - title.width) / 2, 20];
		startOffset = [100, 100];
		setupOffset = [100, 150];
		creditsOffset = [100, 200];
		artOffset = [190, 20];
		
		art.draw(artOffset[0], artOffset[1]);
		title.draw(titleOffset[0], titleOffset[1]);
		start.draw(startOffset[0], startOffset[1]);
		setup.draw(setupOffset[0], setupOffset[1]);
		credits.draw(creditsOffset[0], creditsOffset[1]);
		
		gx = startOffset[0] - 50;
		gy = startOffset[1] - 10 + (this._selection * 50);
		g = this._gears[frame];
		g.draw(gx, gy);
	}
}
